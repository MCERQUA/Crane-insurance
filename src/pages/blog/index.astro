---
import BaseLayout from '@layouts/BaseLayout.astro';
import GlassCard from '@components/ui/GlassCard.tsx';
import GlassButton from '@components/ui/GlassButton.tsx';
import { getCollection } from 'astro:content';

// Get all blog posts
const posts = await getCollection('blog');
const sortedPosts = posts.sort((a, b) => 
  new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);
---

<BaseLayout title="Blog">
  <div class="min-h-screen pt-32 pb-16 bg-light-gray">
    <div class="container-padding max-w-7xl mx-auto">
      <!-- Page Header -->
      <div class="text-center mb-16">
        <h1 class="heading-xl text-espresso mb-6">
          Our Blog
        </h1>
        <p class="body-text text-warm-gray max-w-3xl mx-auto">
          Insights, tips, and stories about insulation and home comfort
        </p>
      </div>
      
      <!-- Blog Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {sortedPosts.map((post) => (
          <article class="animate-slide-up">
            <GlassCard client:visible variant="white">
              <div class="space-y-4">
                {post.data.image ? (
                  <img 
                    src={post.data.image} 
                    alt={post.data.imageAlt || post.data.title}
                    class="aspect-video w-full object-cover rounded-2xl"
                    loading="lazy"
                  />
                ) : (
                  <div class="aspect-video bg-gradient-to-br from-construction-yellow/20 to-machinery-gray/20 rounded-2xl flex items-center justify-center">
                    <svg class="w-12 h-12 text-construction-yellow/50" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd" />
                    </svg>
                  </div>
                )}
                
                <div class="space-y-3">
                  <div class="flex items-center gap-4 text-sm text-warm-gray">
                    <time datetime={post.data.pubDate.toISOString()}>
                      {new Date(post.data.pubDate).toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'short',
                        day: 'numeric'
                      })}
                    </time>
                    <span class="text-khaki">â€¢</span>
                    <span>{post.data.readTime || '5 min read'}</span>
                  </div>
                  
                  <h2 class="text-2xl font-bold text-espresso">
                    {post.data.title}
                  </h2>
                  
                  <p class="text-warm-gray">
                    {post.data.description}
                  </p>
                  
                  {post.data.tags && (
                    <div class="flex flex-wrap gap-2">
                      {post.data.tags.map((tag: string) => (
                        <span class="text-xs px-2 py-1 bg-sand/30 rounded-full text-taupe">
                          {tag}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
                
                <GlassButton
                  href={`/blog/${post.slug}`}
                  size="sm"
                  variant="outline"
                  className="w-full"
                  client:visible
                >
                  Read More
                </GlassButton>
              </div>
            </GlassCard>
          </article>
        ))}
      </div>
      
      {sortedPosts.length === 0 && (
        <div class="text-center py-20">
          <p class="text-xl text-warm-gray">
            No blog posts yet. Check back soon!
          </p>
        </div>
      )}
    </div>
  </div>
</BaseLayout>
